/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mypackage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Inventory2 extends javax.swing.JFrame {

    DefaultTableModel model;

    public Inventory2() {
        initComponents();
        model = (DefaultTableModel) InventoryList2.getModel();
        model.setRowCount(0);
        print();
    }

    void print() {
        model.setRowCount(0);
        DB_connection2.init();
        Connection c = DB_connection2.getConnection();

        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM newstore.inventory");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("id"), rs.getString(2), rs.getString(3), rs.getString(4)});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void Search(String find, String where) {
        model.setRowCount(0);
        DB_connection2.init();
        Connection c = DB_connection2.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM newstore.inventory Where " + where + " Like ?");
            ps.setString(1, "%" + find + "%");
            
            System.out.println("Search triggered: " + find + " in " + where);

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                rs.getString("id"),
                rs.getString(2),
                rs.getString(3),
                rs.getString(4)
            });
                
            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void intSearch(int find, String where) {
         model.setRowCount(0);
        DB_connection2.init();
        Connection c = DB_connection2.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM newstore.inventory Where " + where + " LIKE " + find);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("id"), rs.getString(2), rs.getString(3), rs.getString(4)});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void del(String where, String condition) {
        model.setRowCount(0);
        DB_connection2.init();
        Connection c = DB_connection2.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("DELETE FROM newstore.inventory Where " + where + " = ?");
            ps.setString(1, condition);
            int rowsDeleted = ps.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Record deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "No record found.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory2.class.getName()).log(Level.SEVERE, null, ex);
        }
        print();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buts = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        SelectNew2 = new javax.swing.JToggleButton();
        FindButton = new javax.swing.JButton();
        jToggleButtonUp = new javax.swing.JToggleButton();
        jToggleButtonLd = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InventoryList2 = new javax.swing.JTable();
        InputField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        findname2 = new javax.swing.JRadioButton();
        findprice2 = new javax.swing.JRadioButton();
        findquant2 = new javax.swing.JRadioButton();
        Id2 = new javax.swing.JRadioButton();
        jToggleButtonDl = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 153, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Brush Script Std", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bloom & Bliss Flowershop");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 550, -1));

        SelectNew2.setBackground(new java.awt.Color(204, 153, 255));
        SelectNew2.setText("New Product");
        SelectNew2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 0, 255)));
        SelectNew2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectNew2ActionPerformed(evt);
            }
        });
        getContentPane().add(SelectNew2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 83, 120, 30));

        FindButton.setBackground(new java.awt.Color(204, 153, 255));
        FindButton.setText("Find");
        FindButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 0, 255)));
        FindButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindButtonActionPerformed(evt);
            }
        });
        getContentPane().add(FindButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 70, 90, 30));

        jToggleButtonUp.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButtonUp.setText("Update");
        jToggleButtonUp.setBorder(new javax.swing.border.MatteBorder(null));
        jToggleButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonUpActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButtonUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, 110, 30));

        jToggleButtonLd.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButtonLd.setText("Load");
        jToggleButtonLd.setBorder(new javax.swing.border.MatteBorder(null));
        jToggleButtonLd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLdActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButtonLd, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 410, 110, 30));

        InventoryList2.setBackground(new java.awt.Color(204, 204, 204));
        InventoryList2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(InventoryList2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 650, 260));
        getContentPane().add(InputField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, 310, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Options:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 140, 60, 20));

        buts.add(findname2);
        findname2.setText("Name");
        getContentPane().add(findname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 170, -1, -1));

        buts.add(findprice2);
        findprice2.setText("Price");
        getContentPane().add(findprice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 170, -1, -1));

        buts.add(findquant2);
        findquant2.setText("Quantity");
        getContentPane().add(findquant2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 170, -1, -1));

        buts.add(Id2);
        Id2.setText("Id");
        getContentPane().add(Id2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 170, -1, -1));

        jToggleButtonDl.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButtonDl.setText("Delete");
        jToggleButtonDl.setBorder(new javax.swing.border.MatteBorder(null));
        jToggleButtonDl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDlActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButtonDl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 410, 110, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectNew2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectNew2ActionPerformed
        NewProduct2 open = new NewProduct2();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SelectNew2ActionPerformed

    private void FindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindButtonActionPerformed
        model.setRowCount(0);
        String where;
        int con;
        double conv;
        if (InputField2.getText().equals("")) {
            print();
        } else if (Id2.isSelected()) {
            con = Integer.parseInt(InputField2.getText());
            where = "id";
            intSearch(con, where);
        } else if (findname2.isSelected()) {
            where = "product";
            Search(InputField2.getText(), where);
        } else if (findprice2.isSelected()) {
            where = "price";
            Search(InputField2.getText(), where);
        } else if (findquant2.isSelected()) {
            con = Integer.parseInt(InputField2.getText());
            where = "quantity";
            intSearch(con, where);
        } else {
            JOptionPane.showMessageDialog(null, "Please select what column", "Error! Missing Response!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        buts.clearSelection();
        InputField2.setText("");

    }//GEN-LAST:event_FindButtonActionPerformed

    private void jToggleButtonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonUpActionPerformed
       updateForm2 open = new updateForm2();
       open.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jToggleButtonUpActionPerformed

    private void jToggleButtonLdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLdActionPerformed
print(); // re-load the inventory from database
    JOptionPane.showMessageDialog(this, "Inventory loaded successfully!");
        
    }//GEN-LAST:event_jToggleButtonLdActionPerformed

    private void jToggleButtonDlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDlActionPerformed
        // TODO add your handling code here:
        String where;

        if (InputField2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select which column to delete ", "Error! Missing Selection!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (Id2.isSelected()) {
            model.setRowCount(0);
            where = "id";
            del(where, InputField2.getText());
        } else if (findname2.isSelected()) {
            model.setRowCount(0);
            where = "product";
            del(where, InputField2.getText());
        } else if (findprice2.isSelected()) {
            model.setRowCount(0);
            where = "price";
            del(where, InputField2.getText());
        } else if (findquant2.isSelected()) {
            model.setRowCount(0);
            where = "quantity";
            del(where, InputField2.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Please select what column", "Error! Missing Response!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        buts.clearSelection();
        InputField2.setText("");
        print();
    }//GEN-LAST:event_jToggleButtonDlActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FindButton;
    private javax.swing.JRadioButton Id2;
    private javax.swing.JTextField InputField2;
    private javax.swing.JTable InventoryList2;
    private javax.swing.JToggleButton SelectNew2;
    private javax.swing.ButtonGroup buts;
    private javax.swing.JRadioButton findname2;
    private javax.swing.JRadioButton findprice2;
    private javax.swing.JRadioButton findquant2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButtonDl;
    private javax.swing.JToggleButton jToggleButtonLd;
    private javax.swing.JToggleButton jToggleButtonUp;
    // End of variables declaration//GEN-END:variables
}
